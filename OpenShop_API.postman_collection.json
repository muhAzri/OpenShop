{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "OpenShop Products API",
		"description": "Complete API collection for OpenShop product management with all CRUD operations, search functionality, and error handling scenarios.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product (Success)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kelas Belajar Python\",\n    \"sku\": \"DCD01\",\n    \"description\": \"This is a sample description of the product.\",\n    \"shop\": \"Dicoding\",\n    \"location\": \"Bandung\",\n    \"price\": 1500000,\n    \"discount\": 0,\n    \"category\": \"Course\",\n    \"stock\": 1000,\n    \"is_available\": true,\n    \"picture\": \"https://www.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Creates a new product with all required fields. Should return 201 status code with product data including UUID and HATEOAS links."
					},
					"response": []
				},
				{
					"name": "Create Product (Validation Error)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"sku\": \"INVALID\",\n    \"description\": \"test\",\n    \"shop\": \"test\",\n    \"location\": \"test\",\n    \"price\": -100,\n    \"discount\": -50,\n    \"category\": \"test\",\n    \"stock\": -10,\n    \"is_available\": true,\n    \"picture\": \"invalid-url\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Tests validation errors. Should return 400 status code with detailed validation error messages."
					},
					"response": []
				},
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Retrieves all products that are not soft deleted. Returns products array with HATEOAS links for each product."
					},
					"response": []
				},
				{
					"name": "Get Product Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								""
							]
						},
						"description": "Gets detailed information for a specific product by UUID. Include HATEOAS links for related operations."
					},
					"response": []
				},
				{
					"name": "Get Product Detail (Not Found)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/00000000-0000-0000-0000-000000000000/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000",
								""
							]
						},
						"description": "Tests 404 error handling when requesting a non-existent product. Should return 404 with 'Not found.' message."
					},
					"response": []
				},
				{
					"name": "Get Product Detail (Invalid UUID)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/invalid-uuid/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"invalid-uuid",
								""
							]
						},
						"description": "Tests 404 error handling with invalid UUID format. Should return JSON 404 response instead of HTML."
					},
					"response": []
				},
				{
					"name": "Update Product (Success)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kelas Belajar Python Dasar\",\n    \"sku\": \"DCD02\",\n    \"description\": \"This is a updated sample description of the product.\",\n    \"shop\": \"Dicoding Academy\",\n    \"location\": \"Indonesia\",\n    \"price\": 1200000,\n    \"discount\": 300000,\n    \"category\": \"Bootcamp\",\n    \"stock\": 500,\n    \"is_available\": true,\n    \"picture\": \"https://www.shutterstock.com/image-vector/sample-red-square-grunge-stamp-260nw-338250266.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								""
							]
						},
						"description": "Updates an existing product with new data. Should return 200 status code with updated product data and HATEOAS links."
					},
					"response": []
				},
				{
					"name": "Update Product (Validation Error)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"sku\": \"\",\n    \"description\": \"test\",\n    \"shop\": \"test\",\n    \"location\": \"test\",\n    \"price\": -100,\n    \"discount\": 0,\n    \"category\": \"test\",\n    \"stock\": 10,\n    \"is_available\": true,\n    \"picture\": \"http://example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								""
							]
						},
						"description": "Tests validation errors during product update. Should return 400 status code with validation error details."
					},
					"response": []
				},
				{
					"name": "Update Product (Not Found)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Product\",\n    \"sku\": \"TEST123\",\n    \"description\": \"test description\",\n    \"shop\": \"test shop\",\n    \"location\": \"test location\",\n    \"price\": 100000,\n    \"discount\": 0,\n    \"category\": \"test\",\n    \"stock\": 10,\n    \"is_available\": true,\n    \"picture\": \"http://example.com/test.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/00000000-0000-0000-0000-000000000000/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000",
								""
							]
						},
						"description": "Tests 404 error when trying to update a non-existent product. Should return 404 with 'Not found.' message."
					},
					"response": []
				},
				{
					"name": "Update Product (Invalid UUID)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Product\",\n    \"sku\": \"TEST123\",\n    \"description\": \"test description\",\n    \"shop\": \"test shop\",\n    \"location\": \"test location\",\n    \"price\": 100000,\n    \"discount\": 0,\n    \"category\": \"test\",\n    \"stock\": 10,\n    \"is_available\": true,\n    \"picture\": \"http://example.com/test.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/invalid-uuid/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"invalid-uuid",
								""
							]
						},
						"description": "Tests 404 error with invalid UUID format during update. Should return JSON 404 response."
					},
					"response": []
				},
				{
					"name": "Delete Product (Soft Delete)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/{{product_id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"{{product_id}}",
								""
							]
						},
						"description": "Performs soft delete on a product (sets is_delete=true). Should return 204 status code with no content."
					},
					"response": []
				},
				{
					"name": "Delete Product (Not Found)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/00000000-0000-0000-0000-000000000000/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"00000000-0000-0000-0000-000000000000",
								""
							]
						},
						"description": "Tests 404 error when trying to delete a non-existent product. Should return 404 with 'Not found.' message."
					},
					"response": []
				},
				{
					"name": "Delete Product (Invalid UUID)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/123/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"123",
								""
							]
						},
						"description": "Tests 404 error with invalid UUID format during delete. Should return JSON 404 response."
					},
					"response": []
				}
			],
			"description": "Core CRUD operations for product management"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search Products by Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?name=Python",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Python"
								}
							]
						},
						"description": "Searches for products containing 'Python' in the name. Returns filtered products array with HATEOAS links."
					},
					"response": []
				},
				{
					"name": "Search Products by Location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?location=Jakarta",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "location",
									"value": "Jakarta"
								}
							]
						},
						"description": "Searches for products containing 'Jakarta' in the location. Returns filtered products array with HATEOAS links."
					},
					"response": []
				},
				{
					"name": "Search Products by Name and Location",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?name=Python&location=Bandung",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "Python"
								},
								{
									"key": "location",
									"value": "Bandung"
								}
							]
						},
						"description": "Searches for products matching both name and location criteria. Returns filtered products array."
					},
					"response": []
				},
				{
					"name": "Search Products (No Results)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?name=NonExistentProduct",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "name",
									"value": "NonExistentProduct"
								}
							]
						},
						"description": "Searches for products that don't exist. Should return empty products array: {\"products\": []}"
					},
					"response": []
				}
			],
			"description": "Search functionality for finding products by name and location"
		},
		{
			"name": "Test Data Setup",
			"item": [
				{
					"name": "Create Test Product 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Laptop Gaming ASUS\",\n    \"sku\": \"ASUS-001\",\n    \"description\": \"High performance gaming laptop with RTX graphics\",\n    \"shop\": \"Tech Store\",\n    \"location\": \"Jakarta\",\n    \"price\": 15000000,\n    \"discount\": 1000000,\n    \"category\": \"Electronics\",\n    \"stock\": 25,\n    \"is_available\": true,\n    \"picture\": \"https://example.com/laptop-asus.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Creates test product for demonstration purposes"
					},
					"response": []
				},
				{
					"name": "Create Test Product 2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kelas Python Advanced\",\n    \"sku\": \"PY-ADV-001\",\n    \"description\": \"Advanced Python programming course with real projects\",\n    \"shop\": \"Online Academy\",\n    \"location\": \"Bandung\",\n    \"price\": 2500000,\n    \"discount\": 500000,\n    \"category\": \"Education\",\n    \"stock\": 100,\n    \"is_available\": true,\n    \"picture\": \"https://example.com/python-course.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Creates another test product for search testing"
					},
					"response": []
				},
				{
					"name": "Create Test Product 3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Smartphone Samsung Galaxy\",\n    \"sku\": \"SAM-GAL-001\",\n    \"description\": \"Latest Samsung Galaxy smartphone with AI camera\",\n    \"shop\": \"Mobile Store\",\n    \"location\": \"Surabaya\",\n    \"price\": 8000000,\n    \"discount\": 0,\n    \"category\": \"Electronics\",\n    \"stock\": 50,\n    \"is_available\": true,\n    \"picture\": \"https://example.com/samsung-galaxy.jpg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Creates third test product for comprehensive testing"
					},
					"response": []
				}
			],
			"description": "Helper requests to create test data for API testing"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "product_id",
			"value": "",
			"type": "string"
		}
	]
}